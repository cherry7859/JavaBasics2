Polymorphism:
    - Many forms of a method
    - The method behaves differently depending on the object or parameters that we pass to a method
    - static PolyMorphism / compile time PolyMorphism / early binding: When we achieve PolyMorphism through method overloading
    - dynamic binding / run time PolyMorphism / late binding: When we achieve PolyMorphism through method overriding
Why PolyMorphism:
    - Cleaner code
    - We never change the existing code if we want to improve something, we always want to create new methods and classes
    - We can call these methods using the parent class variable / reference
    - We can call multiple methods from many classes with the help of a single variable
    - Like we can create the array of objects and with the help of a loop will be able to call all the methods from all the classes
How to PolyMorphism:
    1) Create a parent-child relationship
    2) Override the methods in the child class
    3) Create the array of all the child class objects and with the help of loop you can call all the methods from all the child classes
Rules:
    1) All the rules for overriding also apply for PolAbstrayMorphism
    2) We can store the object of a child class inside a variable of type parent class, but we can't do the reverse
    3) We can also create arrays of type parent and they can hold the objects of child classes
